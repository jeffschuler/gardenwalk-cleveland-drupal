<?php
/**
 * @file
 * GardenWalk Customizations
 */

/*
 * Implements hook_views_query_alter().
 */
function gardenwalk_custom_views_query_alter(&$view, &$query) {
  // Order Gardens Block list by Content Type, deliberately
  if ($view->name == 'gardens' && $view->current_display == 'block_1') {
    $query->orderby[0]['field'] = "FIELD(node_type, 'garden', 'community_garden', 'urban_farm', 'reimagining_project', 'special_feature')";
  }
}

/*
 * Implements hook_preprocess_page()
 *
 * Adds Superfish CSS and JS since we have a custom SF main menu block.
 *
 * Waiting on "Please add starting level to superfish menu settings"
 *   http://drupal.org/node/1316254
 */
function gardenwalk_custom_preprocess_page(&$variables) {
  drupal_add_css('sites/all/libraries/superfish/css/superfish.css');
  drupal_add_js(drupal_get_path('module', 'superfish') . '/superfish.js');
  //drupal_add_js('sites/all/libraries/superfish/jquery.hoverIntent.minified.js');
  //drupal_add_js('sites/all/libraries/superfish/sfsmallscreen.js');
  //drupal_add_js('sites/all/libraries/superfish/superfish.js');
  //drupal_add_js('sites/all/libraries/superfish/supersubs.js');
  $variables['scripts'] = drupal_get_js();
}

/*
 *
 */
function computed_field_field_map_marker_label_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items) {
  // Get label prefix
  if (isset($entity->field_neighborhood['und'][0]['tid'])) {
    $term = taxonomy_term_load($entity->field_neighborhood['und'][0]['tid']);
    if (isset($term->field_map_label_prefix['und'])) {
      $prefix = $term->field_map_label_prefix['und'][0]['value'];
    } else {
      // @TODO: Maybe error. The neighborhood for this garden doesn't have a prefix set
      return;
    }
  }

  // Get position in nodequeue
  $neighborhood_qid = 4;
  $neighborhood_tid = $entity->field_neighborhood['und'][0]['tid'];
  $queue_ = nodequeue_load_subqueues_by_reference(array($neighborhood_qid => array($neighborhood_tid)));
  $queue = array_shift($queue_);
  if ($queue) {
    $position = nodequeue_get_subqueue_position($queue->sqid, $entity->nid);
  }

  $entity_field[0]['value'] = $prefix . $position;
}

/*
 *
 */
function computed_field_field_map_marker_label_display($field, $entity_field_item, $entity_lang, $langcode, $entity) {
  // Get position in nodequeue
  $neighborhood_qid = 4;
  $neighborhood_tid = $entity->field_neighborhood['und'][0]['tid'];
  $queue_ = nodequeue_load_subqueues_by_reference(array($neighborhood_qid => array($neighborhood_tid)));
  $queue = array_shift($queue_);
  if ($queue) {
    $position = nodequeue_get_subqueue_position($queue->sqid, $entity->nid);
  }
  $display_output = $entity_field_item['value'];
  return $display_output;
}

/**
 * Implements hook_admin_paths_alter().
 *
 * We change the nodequeue ordering page for neighborhood queues, so that in our
 * custom theme we can implement theme_nodequeue_arrange_subqueue_form_table()
 * as gardenwalk_nodequeue_arrange_subqueue_form_table() in template.php
 * and add the Map Market Label column.
 */
function gardenwalk_custom_admin_paths_alter(&$paths) {
  $paths['admin/structure/nodequeue/4/view/*'] = FALSE;
}